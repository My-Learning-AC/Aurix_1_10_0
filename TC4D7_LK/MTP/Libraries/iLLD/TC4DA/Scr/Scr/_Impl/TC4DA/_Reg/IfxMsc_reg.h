/**
 * \file IfxMsc_reg.h
 * \brief
 * \copyright Copyright (c) 2022 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_MSC/V0.2.1.0.3
 * Specification: latest @ 2022-11-23 instance sheet @ MC_A3G_HWDDSOC_FUNCTIONAL_INSTANCE_SHEET/V13.1.1.1.12
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Msc_Registers_Cfg Msc address
 * \ingroup IfxSfr_Msc_Registers
 * 
 * \defgroup IfxSfr_Msc_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Msc_Registers_Cfg
 *
 * \defgroup IfxSfr_Msc_Registers_Cfg_Msc0 2-MSC0
 * \ingroup IfxSfr_Msc_Registers_Cfg
 *
 *
 */
#ifndef IFXMSC_REG_H
#define IFXMSC_REG_H 1
/******************************************************************************/
#include "IfxMsc_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Msc_Registers_Cfg_BaseAddress
 * \{  */

/** \brief MSC object */
#define MODULE_MSC0 /*lint --e(923, 9078)*/ ((*(Ifx_MSC*)0xF4400800u))
/** \}  */


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Msc_Registers_Cfg_Msc0
 * \{  */
/** \brief 0, Clock Control Register */
#define MSC0_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_CLC*)0xF4400800u)

/** \brief 4, OCDS Control and Status Register */
#define MSC0_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_OCS*)0xF4400804u)

/** \brief 8, Module Identification Register */
#define MSC0_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ID*)0xF4400808u)

/** \brief C, Reset Control Register A */
#define MSC0_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_RST_CTRLA*)0xF440080Cu)

/** \brief 10, Reset Control Register B */
#define MSC0_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_RST_CTRLB*)0xF4400810u)

/** \brief 14, Reset Status Register */
#define MSC0_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_RST_STAT*)0xF4400814u)

/** \brief 18, PROT Register Endinit */
#define MSC0_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_PROT*)0xF4400818u)

/** \brief 1C, PROT Register Safe Endinit */
#define MSC0_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_PROT*)0xF440081Cu)

/** \brief 20, Write access enable register A */
#define MSC0_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_WRA*)0xF4400820u)

/** \brief 24, Write access enable register B */
#define MSC0_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_WRB_FPI*)0xF4400824u)

/** \brief 28, Read access enable register A */
#define MSC0_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_RDA*)0xF4400828u)

/** \brief 2C, Read access enable register B */
#define MSC0_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_RDB_FPI*)0xF440082Cu)

/** \brief 30, VM access enable register */
#define MSC0_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_VM*)0xF4400830u)

/** \brief 34, PRS access enable register */
#define MSC0_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_PRS*)0xF4400834u)

/** \brief 40, Fractional Divider Register */
#define MSC0_FDR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_FDR*)0xF4400840u)

/** \brief 44, Upstream Status Register */
#define MSC0_USR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_USR*)0xF4400844u)

/** \brief 48, Downstream Control Register */
#define MSC0_DSC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSC*)0xF4400848u)

/** \brief 4C, Downstream Status Register */
#define MSC0_DSS /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSS*)0xF440084Cu)

/** \brief 50, Downstream Data Register */
#define MSC0_DD /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DD*)0xF4400850u)

/** \brief 54, Downstream Command Register */
#define MSC0_DC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DC*)0xF4400854u)

/** \brief 58, Downstream Select Data Source Low Register */
#define MSC0_DSDSL /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSL*)0xF4400858u)

/** \brief 5C, Downstream Select Data Source High Register */
#define MSC0_DSDSH /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSH*)0xF440085Cu)

/** \brief 60, Emergency Stop Register */
#define MSC0_ESR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ESR*)0xF4400860u)

/** \brief 70, Upstream Data Register 0 */
#define MSC0_UD0 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF4400870u)

/** \brief 74, Upstream Data Register 1 */
#define MSC0_UD1 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF4400874u)

/** \brief 78, Upstream Data Register 2 */
#define MSC0_UD2 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF4400878u)

/** \brief 7C, Upstream Data Register 3 */
#define MSC0_UD3 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF440087Cu)

/** \brief 80, Interrupt Control Register */
#define MSC0_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ICR*)0xF4400880u)

/** \brief 84, Interrupt Status Register */
#define MSC0_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ISR*)0xF4400884u)

/** \brief 88, Interrupt Set Clear Register */
#define MSC0_ISC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ISC*)0xF4400888u)

/** \brief 8C, Output Control Register */
#define MSC0_OCR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_OCR*)0xF440088Cu)

/** \brief 90, Output Extended Control Register */
#define MSC0_OECR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_OECR*)0xF4400890u)

/** \brief 94, Slow Channel Configuration Register */
#define MSC0_SCC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_SCC*)0xF4400894u)

/** \brief 98, Downstream Control Enhanced Register */
#define MSC0_DSCE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSCE*)0xF4400898u)

/** \brief 9C, Upstream Control Enhanced Register */
#define MSC0_USCE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_USCE*)0xF440089Cu)

/** \brief A0, Downstream Select Data Source Low Extension Register */
#define MSC0_DSDSLE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSLE*)0xF44008A0u)

/** \brief A4, Downstream Select Data Source High Extension Register */
#define MSC0_DSDSHE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSHE*)0xF44008A4u)

/** \brief A8, Emergency Stop Extension Register */
#define MSC0_ESRE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ESRE*)0xF44008A8u)

/** \brief AC, Downstream Timing Extension Register */
#define MSC0_DSTE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSTE*)0xF44008ACu)

/** \brief B0, Downstream Data Mirror Register */
#define MSC0_DDM /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DDM*)0xF44008B0u)

/** \brief B4, Downstream Data Extension Register */
#define MSC0_DDE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DDE*)0xF44008B4u)

/** \brief B8, Downstream Command Mirror Register */
#define MSC0_DCM /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCM*)0xF44008B8u)

/** \brief BC, Downstream Command Extension Register */
#define MSC0_DCE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCE*)0xF44008BCu)

/** \brief C0, Asynchronous Block Configuration Register */
#define MSC0_ABC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ABC*)0xF44008C0u)

/** \brief C4, Downstream Command Slow Channel X Register */
#define MSC0_DCSX /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCSX*)0xF44008C4u)

/** \brief C8, Downstream Command Slow Channel Y Register */
#define MSC0_DCSY /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCSY*)0xF44008C8u)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXMSC_REG_H */
