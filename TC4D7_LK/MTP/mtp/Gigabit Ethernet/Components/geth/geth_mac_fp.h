/**
 * \file geth_mac_fp.h
 * \brief Functions to interface to the Geth MAC Flexible Receive Parser
 *
 * \version V0.1.0
 * \copyright Copyright (c) 2019-2020 Infineon Technologies AG. All rights reserved.
 *
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or
 * organization obtaining a copy of the software and accompanying
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

/*******************************************************************************
**                             Author(s) Identity                             **
********************************************************************************
** Initials     Name                                                          **
** ---------------------------------------------------------------------------**
** RS           Ronny Schulze                                                 **
** DM           Daniel Mysliwitz                                              **
*******************************************************************************/

/*******************************************************************************
**                          Revision Control History                          **
********************************************************************************
** V0.1.0: 2021-03-16, DM:   Initial version                                  **
*******************************************************************************/

#ifndef COMPONENTS_GETH_GETH_MAC_FP_H_
#define COMPONENTS_GETH_GETH_MAC_FP_H_

#include "Cpu/Std/Ifx_Types.h"
#include "Geth/Eth/IfxGeth_Eth.h"
#include "IfxGeth_reg.h"

/**********************************************************************************************************************
 * MACROS
 *********************************************************************************************************************/

/**********************************************************************************************************************
 * ENUMS
 *********************************************************************************************************************/

/**********************************************************************************************************************
 * DATA STRUCTURES
 *********************************************************************************************************************/
typedef struct
{
    struct
    {
        uint32 MD; /* match data */
    } row0;

    struct
    {
        uint32 ME; /* match enable */
    } row1;

    union
    {
        uint32 U;
        struct
        {
            uint32 AF : 1; /* 64: accept frame */
            uint32 RF : 1; /* 65: reject frame */
            uint32 IM : 1; /* 66: inverse match */
            uint32 NIC: 1; /* 67: next instruction control */
            uint32    : 4; /* 71..68: reserved  */
            uint32 FO : 6; /* 77..72: frame offset */
            uint32    : 2; /* 79..78: reserved */
            uint32 OKI: 8; /* 87..80: OK index */
            uint32 GIV: 1; /* 88: Gate ID valid */
            uint32 GID: 3; /* 91..89: Gate ID */
            uint32    : 4; /* 95..92: reserved */
        } B;
    } row2;

    union
    {
       uint32 U;
       struct
       {
            uint32 DCH: 16; /* 111..96: DMA channel number */
            uint32    : 16; /* 127..112: reserved */
       } B;
    } row3;
} GethMacFrameParser;

/**********************************************************************************************************************
 * API PROTOTYPES
 *********************************************************************************************************************/
/**
 * @brief Initializes the MAC software structure based on ConfigWizard settings
 * @param macInstance_p pointer to the ethernet register block
 * @return SUCCESS or FAILURE
 */
sint32 Geth_FrameParser_Init(Ifx_GETH *const gethInstance_p, const uint8 gethPort_u8);

sint32 Geth_FrameParser_readEntry(Ifx_GETH *const gethInstance_p, const uint8 gethPort_u8, const uint8 entryIdx_u8, GethMacFrameParser *entryLine_p);

sint32 Geth_FrameParser_writeEntry(Ifx_GETH *const gethInstance_p, const uint8 gethPort_u8, const uint8 entryIdx_u8, GethMacFrameParser *entryLine_p);

#endif /* COMPONENTS_GETH_GETH_MAC_FP_H_ */
