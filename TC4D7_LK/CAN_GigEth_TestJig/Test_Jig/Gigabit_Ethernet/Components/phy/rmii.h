/**
 * \file  mii.h
 * \brief
 *
 * \version ASDK_0_6_0
 * \copyright Copyright (c) 2019-2020 Infineon Technologies AG. All rights reserved.
 *
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.

 */

#ifndef RMII_H
#define RMII_H

/* MDIO Manageable Devices (MMDs) - Clause 45 */
/* Physical Medium Attachment/ Physical Medium Dependent */
#define RMII_MMD_PMAPMD		1
/* WAN Interface Sublayer */	
#define RMII_MMD_WIS		    2
/* Physical Coding Sublayer */
#define RMII_MMD_PCS		    3
/* PHY Extender Sublayer */
#define RMII_MMD_PHYXS		4
/* DTE Extender Sublayer */
#define RMII_MMD_DTEXS		5
/* Transmission Convergence */	
#define RMII_MMD_TC		    6
/* Auto-Negotiation */	
#define RMII_MMD_AN		    7
/* Clause 22 extension */
#define RMII_MMD_C22EXT		29
/* Vendor specific 1 */
#define RMII_MMD_VEND1		30
/* Vendor specific 2 */	
#define RMII_MMD_VEND2		31	


/* Generic MII registers - Clause 22 */
/* Basic mode control register */
#define RMII_BMCR        0x00
/* Basic mode status register  */  
#define RMII_BMSR        0x01
/* PHYS ID 1 */  
#define RMII_PHYSID1     0x02
/* PHYS ID 2 */
#define RMII_PHYSID2     0x03 
/* Advertisement control reg */ 
#define RMII_ADVERTISE   0x04 
/* Link partner ability reg */ 
#define RMII_LPA         0x05 
/* Expansion register */
#define RMII_EXPANSION   0x06
/* 1000BASE-T control */  
#define RMII_CTRL1000    0x09
/* 1000BASE-T status */  
#define RMII_STAT1000    0x0a
/* MMD Access Control Register */  
#define RMII_MMD_CTRL    0x0d 
/* MMD Access Data Register */ 
#define RMII_MMD_DATA    0x0e
/* Extended Status */ 
#define RMII_ESTATUS     0x0f
/* Disconnect counter */
#define RMII_DCOUNTER    0x12
/* False carrier counter */  
#define RMII_FCSCOUNTER  0x13
/* N-way auto-neg test reg */  
#define RMII_NWAYTEST    0x14 
/* Receive error counter */ 
#define RMII_RERRCOUNTER 0x15 
/* Silicon revision */ 
#define RMII_SREVISION   0x16 
/* Reserved */ 
#define RMII_RESV1       0x17 
/* Lpback, rx, bypass error */
#define RMII_LBRERROR    0x18 
/* PHY address */ 
#define RMII_PHYADDR     0x19  
/* Reserved */
#define RMII_RESV2       0x1a
/* TPI status for 10mbps */  
#define RMII_TPISTATUS   0x1b
/* Network interface config */  
#define RMII_NCONFIG     0x1c  


/* Basic mode control register */
/* Unused */
#define BMCR_RESV       0x003f
/* MSB of Speed (1000) */ 
#define BMCR_SPEED1000  0x0040
/* Collision test */  
#define BMCR_CTST       0x0080
 /* Full duplex */ 
#define BMCR_FULLDPLX   0x0100
/* Auto negotiation restart    */
#define BMCR_ANRESTART  0x0200 
/* Isolate data paths from MII */
#define BMCR_ISOLATE    0x0400 
/* Enable low power state */ 
#define BMCR_PDOWN      0x0800 
/* Enable auto negotiation */ 
#define BMCR_ANENABLE   0x1000
/* Select 100Mbps */  
#define BMCR_SPEED100   0x2000  
/* TXD loopback bits */
#define BMCR_LOOPBACK   0x4000 
/* Reset to default state  */
#define BMCR_RESET      0x8000 
/* Select 10Mbps */ 
#define BMCR_SPEED10    0x0000  


/* Basic mode status register */
/* Ext-reg capability */
#define BMSR_ERCAP      0x0001
/* Jabber detected */  
#define BMSR_JCD          0x0002  
/* Link status */
#define BMSR_LSTATUS    0x0004 
/* Able to do auto-negotiation */ 
#define BMSR_ANEGCAPABLE  0x0008 
/* Remote fault detected */
#define BMSR_RFAULT   0x0010  
/* Auto-negotiation complete */
#define BMSR_ANEGCOMPLETE 0x0020  
/* Unused */
#define BMSR_RESV   0x00c0 
/* Extended Status in R15 */
#define BMSR_ESTATEN    0x0100 
/* Can do 100BASE-T2 HDX */ 
#define BMSR_100HALF2   0x0200  
/* Can do 100BASE-T2 FDX */
#define BMSR_100FULL2   0x0400
/* Can do 10mbps, half-duplex */  
#define BMSR_10HALF   0x0800  
/* Can do 10mbps, full-duplex */
#define BMSR_10FULL   0x1000  
/* Can do 100mbps, half-duplex */
#define BMSR_100HALF    0x2000
/* Can do 100mbps, full-duplex */  
#define BMSR_100FULL    0x4000  
/* Can do 100mbps, 4k packets */
#define BMSR_100BASE4   0x8000  


/* Advertisement control register */
/* Selector bits */
#define ADVERTISE_SLCT    0x001f 
/* Only selector supported */ 
#define ADVERTISE_CSMA    0x0001  
/* Try for 10mbps half-duplex */
#define ADVERTISE_10HALF  0x0020  
/* Try for 1000BASE-X full-duplex */
#define ADVERTISE_1000XFULL 0x0020  
/* Try for 10mbps full-duplex */
#define ADVERTISE_10FULL  0x0040  
/* Try for 1000BASE-X half-duplex */
#define ADVERTISE_1000XHALF 0x0040  
/* Try for 100mbps half-duplex */
#define ADVERTISE_100HALF 0x0080  
/* Try for 1000BASE-X pause */
#define ADVERTISE_1000XPAUSE  0x0080  
/* Try for 100mbps full-duplex */
#define ADVERTISE_100FULL 0x0100 
/* Try for 1000BASE-X asym pause */ 
#define ADVERTISE_1000XPSE_ASYM 0x0100 
/* Try for 100mbps 4k packets */ 
#define ADVERTISE_100BASE4  0x0200 
/* Try for pause */ 
#define ADVERTISE_PAUSE_CAP 0x0400  
/* Try for asymetric pause */
#define ADVERTISE_PAUSE_ASYM  0x0800
/* Unused */  
#define ADVERTISE_RESV    0x1000  
/* Say we can detect faults */
#define ADVERTISE_RFAULT  0x2000  
/* Ack link partners response */
#define ADVERTISE_LPACK   0x4000
/* Next page bit */  
#define ADVERTISE_NPAGE   0x8000 
#define ADVERTISE_FULL    (ADVERTISE_100FULL | ADVERTISE_10FULL | \
          ADVERTISE_CSMA)
#define ADVERTISE_ALL   (ADVERTISE_10HALF | ADVERTISE_10FULL | \
          ADVERTISE_100HALF | ADVERTISE_100FULL)


/* Link partner ability register */
/* Same as advertise selector */
#define LPA_SLCT    0x001f  
/* Can do 10mbps half-duplex */
#define LPA_10HALF    0x0020  
/* Can do 1000BASE-X full-duplex */
#define LPA_1000XFULL   0x0020  
/* Can do 10mbps full-duplex */
#define LPA_10FULL    0x0040  
/* Can do 1000BASE-X half-duplex */
#define LPA_1000XHALF   0x0040  
/* Can do 100mbps half-duplex  */
#define LPA_100HALF   0x0080  
/* Can do 1000BASE-X pause */
#define LPA_1000XPAUSE    0x0080
/* Can do 100mbps full-duplex */  
#define LPA_100FULL   0x0100  
/* Can do 1000BASE-X pause asym */
#define LPA_1000XPAUSE_ASYM 0x0100  
/* Can do 100mbps 4k packets */
#define LPA_100BASE4    0x0200  
/* Can pause */
#define LPA_PAUSE_CAP   0x0400  
/* Can pause asymetrically */
#define LPA_PAUSE_ASYM    0x0800 
/* Unused */
#define LPA_RESV    0x1000  
/* Link partner faulted */
#define LPA_RFAULT    0x2000  
/* Link partner acked us */
#define LPA_LPACK   0x4000  
/* Next page bit */
#define LPA_NPAGE   0x8000
#define LPA_DUPLEX    (LPA_10FULL | LPA_100FULL)
#define LPA_100     (LPA_100FULL | LPA_100HALF | LPA_100BASE4)


/* Expansion register for auto-negotiation */
/* Can do N-way auto-nego */
#define EXPANSION_NWAY    0x0001
/* Got new RX page code word */  
#define EXPANSION_LCWP    0x0002  
/* This enables npage words */
#define EXPANSION_ENABLENPAGE 0x0004  
/* Link partner supports npage */
#define EXPANSION_NPCAPABLE 0x0008  
/* Multiple faults detected */
#define EXPANSION_MFAULTS 0x0010  
/* Unused */
#define EXPANSION_RESV    0xffe0 
 
 
/* Can do 1000BT Full */
#define ESTATUS_1000_TFULL  0x2000  
/* Can do 1000BT Half */
#define ESTATUS_1000_THALF  0x1000  


/* N-way test register */
/* Unused */
#define NWAYTEST_RESV1    0x00ff
/* Enable loopback for N-way */
#define NWAYTEST_LOOPBACK 0x0100  
/* Unused */
#define NWAYTEST_RESV2    0xfe00  


/* 1000BASE-T Control register */
/* Advertise 1000BASE-T full duplex */
#define ADVERTISE_1000FULL  0x0200  
/* Advertise 1000BASE-T half duplex */
#define ADVERTISE_1000HALF  0x0100  
#define CTL1000_AS_MASTER 0x0800
#define CTL1000_ENABLE_MASTER 0x1000


/* 1000BASE-T Status register */
/* Master/Slave resolution failure */
#define LPA_1000MSFAIL		0x8000	
/* Link partner local receiver status */
#define LPA_1000LOCALRXOK 0x2000  
/* Link partner remote receiver status */
#define LPA_1000REMRXOK   0x1000  
/* Link partner 1000BASE-T full duplex */
#define LPA_1000FULL    0x0800  
/* Link partner 1000BASE-T half duplex */
#define LPA_1000HALF    0x0400  


/* Flow control flags */
#define FLOW_CTRL_TX    0x01
#define FLOW_CTRL_RX    0x02

/* MDIO Manageable Devices (MMDs) */
/* Physical Medium Attachment / Physical Medium Dependent */
#define MDIO_MMD_PMAPMD		1	
/* WAN Interface Sublayer */
#define MDIO_MMD_WIS		2	
/* Physical Coding Sublayer */
#define MDIO_MMD_PCS		3	
/* PHY Extender Sublayer */
#define MDIO_MMD_PHYXS		4	
/* DTE Extender Sublayer */
#define MDIO_MMD_DTEXS		5	
/* Transmission Convergence */
#define MDIO_MMD_TC		6	
/* Auto-Negotiation */
#define MDIO_MMD_AN		7	
/* Clause 22 extension */
#define MDIO_MMD_C22EXT		29	
/* Vendor specific 1 */
#define MDIO_MMD_VEND1		30
/* Vendor specific 2 */	
#define MDIO_MMD_VEND2		31	


/* EEE Capability register */
#define MDIO_PCS_EEE_ABLE	20	
/* EEE Capability register 2 */
#define MDIO_PCS_EEE_ABLE2	21	


/* EEE advertisement */
#define MDIO_AN_EEE_ADV		60	
/* EEE link partner ability */
#define MDIO_AN_EEE_LPABLE	61
/* EEE advertisement 2 */	
#define MDIO_AN_EEE_ADV2	62	
/* EEE link partner ability 2 */
#define MDIO_AN_EEE_LPABLE2	63	


/* MMD Access Control register fields */
/* Mask MMD DEVAD*/
#define RMII_MMD_CTRL_DEVAD_MASK 0x1f
/* Address */  
#define RMII_MMD_CTRL_ADDR 0x0000  
/* No post increment */
#define RMII_MMD_CTRL_NOINCR 0x4000  
/* Post increment on reads & writes */
#define RMII_MMD_CTRL_INCR_RDWT  0x8000  
/* Post increment on writes only */
#define RMII_MMD_CTRL_INCR_ON_WT 0xC000  

#endif
